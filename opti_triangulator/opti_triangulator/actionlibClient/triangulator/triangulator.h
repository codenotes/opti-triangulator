// Generated by gencpp from file triangulator/triangulator.msg
// DO NOT EDIT!


#ifndef TRIANGULATOR_MESSAGE_TRIANGULATOR_H
#define TRIANGULATOR_MESSAGE_TRIANGULATOR_H

#include <ros/service_traits.h>


#include <triangulator/triangulatorRequest.h>
#include <triangulator/triangulatorResponse.h>


namespace triangulator
{

struct triangulator
{

typedef triangulatorRequest Request;
typedef triangulatorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct triangulator
} // namespace triangulator


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::triangulator::triangulator > {
  static const char* value()
  {
    return "86c820481e389198034d61c148214606";
  }

  static const char* value(const ::triangulator::triangulator&) { return value(); }
};

template<>
struct DataType< ::triangulator::triangulator > {
  static const char* value()
  {
    return "triangulator/triangulator";
  }

  static const char* value(const ::triangulator::triangulator&) { return value(); }
};


// service_traits::MD5Sum< ::triangulator::triangulatorRequest> should match 
// service_traits::MD5Sum< ::triangulator::triangulator > 
template<>
struct MD5Sum< ::triangulator::triangulatorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::triangulator::triangulator >::value();
  }
  static const char* value(const ::triangulator::triangulatorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::triangulator::triangulatorRequest> should match 
// service_traits::DataType< ::triangulator::triangulator > 
template<>
struct DataType< ::triangulator::triangulatorRequest>
{
  static const char* value()
  {
    return DataType< ::triangulator::triangulator >::value();
  }
  static const char* value(const ::triangulator::triangulatorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::triangulator::triangulatorResponse> should match 
// service_traits::MD5Sum< ::triangulator::triangulator > 
template<>
struct MD5Sum< ::triangulator::triangulatorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::triangulator::triangulator >::value();
  }
  static const char* value(const ::triangulator::triangulatorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::triangulator::triangulatorResponse> should match 
// service_traits::DataType< ::triangulator::triangulator > 
template<>
struct DataType< ::triangulator::triangulatorResponse>
{
  static const char* value()
  {
    return DataType< ::triangulator::triangulator >::value();
  }
  static const char* value(const ::triangulator::triangulatorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TRIANGULATOR_MESSAGE_TRIANGULATOR_H
